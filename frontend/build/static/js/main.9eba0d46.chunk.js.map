{"version":3,"sources":["reducers/initialState.js","actions/types.js","reducers/Todos.js","reducers/index.js","components/Forms/CreateBucketForm.js","actions/Todos.js","components/bucket/BucketListItem.js","components/bucket/BucketList.js","components/bucket/Bucket.js","components/Forms/UpdateTodoForm.js","components/todo/Todo.js","components/todo/TodoListItem.js","components/Forms/CreateTodoForm.js","components/todo/TodoFilter.js","components/todos/Todos.js","App.js","index.js"],"names":["initialState","buckets","bucketName","editingItem","todos","todo","loading","ADD_BUCKET","ADD_TODO","GET_TODO","GET_BUCKETS","GET_TODOS","UPDATE_TODO","DELETE_TODO","FILTERED_TODO","DELETE_BUCKET","TodosReducer","state","action","payload","console","log","type","actionTypes","map","_id","todoId","filter","bucket","bucketId","todoItem","value","completed","items","length","id","item","modifiedItem","newItem","find","AppReducer","reduceReducers","connect","addBucket","bucketItem","dispatch","a","config","headers","body","title","axios","post","res","actions","data","React","useState","setTitle","onSubmit","e","preventDefault","className","autoComplete","name","placeholder","label","onChange","target","deleteBucket","delete","to","onClick","bucketid","alert","getBucket","get","useEffect","Bucket","updateTodo","history","patch","goBack","withRouter","defaultValue","getTodo","todoID","match","params","changeStatus","status","deleteTodo","checked","setChecked","addTodo","bucketID","filteredTodo","handleClick","getTodos","App","src","alt","path","component","exact","Todos","Todo","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LASeA,EATM,CACjBC,QAAS,GACTC,WAAY,GACZC,YAAa,GACbC,MAAO,GACPC,KAAM,GACNC,SAAS,G,eCNAC,EAAa,aACbC,EAAW,WACXC,EAAW,WACXC,EAAc,cACdC,EAAY,YACZC,EAAc,cAGdC,EAAc,cAIdC,EAAgB,gBAChBC,EAAgB,gBCgGdC,EA3GM,SAACC,EAAOC,GAAY,IAC7BC,EAAYD,EAAZC,QAER,OADAC,QAAQC,IAAIF,GACJD,EAAOI,MACX,KAAKC,EACD,OAAO,2BAAKN,GAAZ,IAAmBhB,QAAQ,GAAD,mBAAMgB,EAAMhB,SAAZ,CAAqBkB,MAEnD,KAAKI,EACD,OAAO,2BAAKN,GAAZ,IAAmBhB,QAASkB,EAASb,SAAS,IAElD,KAAKiB,EACD,OAAO,2BAAKN,GAAZ,IAAmBb,MAAOe,EAASb,SAAS,IAEhD,KAAKiB,EACD,OAAO,2BAAKN,GAAZ,IAAmBb,MAAM,GAAD,mBAAMa,EAAMb,OAAZ,CAAmBe,MAE/C,KAAKI,EACD,OAAO,2BAAKN,GAAZ,IAAmBZ,KAAMc,EAASb,SAAS,IAE/C,KAAKiB,EACD,OAAO,2BACAN,GADP,IAEIb,MAAOa,EAAMb,MAAMoB,KAAI,SAAAnB,GAAI,OACvBA,EAAKoB,MAAQN,EAAQO,OAArB,2BAAmCrB,GAAnC,IAAyCD,MAAOe,EAAQf,QAAUC,KAEtEC,SAAS,IAGjB,KAAKiB,EACD,OAAO,2BACAN,GADP,IAEIb,MAAOe,EACPb,SAAS,IAGjB,KAAKiB,EACD,OAAO,2BACAN,GADP,IAEIb,MAAOa,EAAMb,MAAMuB,QAAO,SAAAtB,GAAI,OAAIA,EAAKoB,MAAQN,KAC/Cb,SAAS,IAGjB,KAAKiB,EACD,OAAO,2BACAN,GADP,IAEIhB,QAASgB,EAAMhB,QAAQ0B,QAAO,SAAAC,GAAM,OAAIA,EAAOH,MAAQN,KACvDf,MAAOa,EAAMb,MAAMuB,QAAO,SAAAtB,GAAI,OAAIA,EAAKwB,WAAaV,KACpDd,KAAM,GACNC,SAAS,IAGjB,ID/CgB,WCgDZ,IAAMwB,EAAW,CACbC,MAAOb,EAAOC,QAAQY,MACtBC,WAAW,EACX9B,WAAYgB,EAAOC,QAAQjB,YAG/B,OAAO,2BAAKe,GAAZ,IAAmBgB,MAAM,GAAD,mBAAMhB,EAAMgB,OAAZ,CAAmBH,MAE/C,ID7CwB,mBC+CpB,OADiBb,EAAMgB,MAAMC,OAAZ,2BAA0BjB,GAA1B,IAAiCd,YAAa,KAA9C,eAA0Dc,GAI/E,ID5DmB,cC6Df,IAAMgB,EAAQhB,EAAMgB,MAAMN,QAAO,qBAAGQ,KAAgBjB,EAAOC,QAAQgB,MACnE,OAAO,2BAAKlB,GAAZ,IAAmBgB,UAGvB,ID1DiB,YC2Db,IAAMA,EAAQhB,EAAMgB,MAAMT,KAAI,SAAAY,GAK1B,OAJIA,EAAKD,KAAOjB,EAAOC,QAAQkB,aAAaF,KACxCC,EAAKL,MAAQb,EAAOC,QAAQkB,aAAaN,OAGtCK,KAGX,OAAO,2BAAKnB,GAAZ,IAAmBgB,QAAO9B,YAAa,KAG3C,IDrEqB,gBCsEjB,IAAM8B,EAAQhB,EAAMgB,MAAMT,KAAI,SAAAY,GAC1B,GAAIA,EAAKD,KAAOjB,EAAOC,QAAQkB,aAAaF,GAAI,CAC5C,IAAMG,EAAO,eAAQF,GAErB,OADAE,EAAQN,WAAaM,EAAQN,UACtBM,EAGX,OAAOF,KAGX,OAAO,2BAAKnB,GAAZ,IAAmBgB,UAGvB,IDhFwB,mBCiFpB,IAAMG,EAAOnB,EAAMgB,MAAMM,MAAK,qBAAGJ,KAAgBjB,EAAOC,QAAQgB,MAChE,OAAO,2BAAKlB,GAAZ,IAAmBd,YAAaiC,IAGpC,QACI,OAAOnB,ICjGJuB,EAFIC,YAAezC,EAAcgB,G,+FCqCjC0B,cAAQ,GAAI,CAAEC,UCvCJ,SAAAC,GAAU,8CAAI,WAAMC,GAAN,mBAAAC,EAAA,6DACnC1B,QAAQC,IAAI,aAAcuB,GACpBG,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAAO,CACTC,MAAON,GATwB,kBAabO,IAAMC,KAAK,cAAeH,EAAMF,GAbnB,OAazBM,EAbyB,OAe/BR,EAAS,CACLvB,KAAMgC,EACNnC,QAASkC,EAAIE,OAjBc,kDAoB/BnC,QAAQC,IAAR,MApB+B,0DAAJ,wDDuCpBqB,EAlCU,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACda,IAAMC,SAAS,IADD,mBACjCP,EADiC,KAC1BQ,EAD0B,KAYxC,OACI,mCACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACFlB,EAAUO,GACVQ,EAAS,KAQL,SACI,uBACII,UAAU,iCACVC,aAAa,MACbC,KAAK,QACLC,YAAY,sBACZC,MAAM,QACNnC,MAAOmB,EACPiB,SAbK,SAACP,GAClBF,EAASE,EAAEQ,OAAOrC,iBEgBXW,cACX,GACA,CAAE2B,aD6IsB,SAAAlC,GAAE,8CAAI,WAAMU,GAAN,SAAAC,EAAA,+EAEpBK,IAAMmB,OAAN,sBAA4BnC,IAFR,OAI1BU,EAAS,CACLvB,KAAMgC,EACNnC,QAASgB,IANa,+CAS1Bf,QAAQC,IAAR,MAT0B,wDAAJ,wDC/IfqB,EA3BQ,SAAC,GAA8B,IAA5B2B,EAA2B,EAA3BA,aAAczC,EAAa,EAAbA,OAOpC,OACI,qBAAIkC,UAAU,iBAAd,UACI,cAAC,IAAD,CAAMS,GAAE,kBAAa3C,EAAOH,IAApB,UAAR,SACI,qBAAKqC,UAAU,uBAAf,SAAuClC,EAAOsB,UAElD,wBACIY,UAAU,wBACVU,QAAS,SAACZ,GAAD,OAZSa,EAYmB7C,EAAOH,IAXpDL,QAAQC,IAAIoD,GACZC,MAAM,+FACNL,EAAaI,GAHS,IAAIA,GAUtB,oBAJgC7C,EAAOO,OCcpCO,eAJS,SAAAzB,GAAK,MAAK,CAC9BhB,QAASgB,EAAMhB,WAKf,CAAE0E,UFJmB,yDAAM,WAAM9B,GAAN,eAAAC,EAAA,+EAELK,IAAMyB,IAAI,gBAFL,OAEjBvB,EAFiB,OAIvBR,EAAS,CACLvB,KAAMgC,EACNnC,QAASkC,EAAIE,OANM,gDASvBnC,QAAQC,IAAR,MATuB,yDAAN,wDEEVqB,EAtBI,SAAC,GAA4B,IAA1BiC,EAAyB,EAAzBA,UAAW1E,EAAc,EAAdA,QAI7B,OAHAuD,IAAMqB,WAAU,WACZF,MACD,CAACA,IAEA,oBAAIb,UAAU,YAAd,SACK7D,EAAQuB,KAAI,SAAAI,GACT,OAAO,cAAC,EAAD,CAAiCA,OAAQA,GAApBA,EAAOH,aCDpCqD,EATA,WACX,OACI,sBAAKhB,UAAU,OAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCsCGpB,cAAQ,GAAI,CAAEqC,WJ4CH,SAAC7B,EAAOxB,EAAQsD,GAAhB,8CAA4B,WAAMnC,GAAN,mBAAAC,EAAA,6DAClD1B,QAAQC,IAAI,QAAS6B,GACfH,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAAO,CACTC,MAAOA,GATuC,kBAa5BC,IAAM8B,MAAN,oBAAyBvD,GAAUuB,EAAMF,GAbb,OAaxCM,EAbwC,OAe9CR,EAAS,CACLvB,KAAMgC,EACNnC,QAASkC,EAAIE,OAGjByB,EAAQE,SApBsC,kDAsB9C9D,QAAQC,IAAR,MAtB8C,0DAA5B,wDI5CXqB,CAA4ByC,aAtCpB,SAAC,GAAmC,IAAjCJ,EAAgC,EAAhCA,WAAY1E,EAAoB,EAApBA,KAAM2E,EAAc,EAAdA,QAAc,EAC5BxB,IAAMC,SAAS,IADa,mBAC/CP,EAD+C,KACxCQ,EADwC,KAYtD,OACI,mCACI,uBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACFkB,EAAW7B,EAAO7C,EAAKoB,IAAKuD,GAC5BtB,EAAS,KAQL,UACI,uBACII,UAAU,iCACVC,aAAa,MACbC,KAAK,QACLC,YAAY,mCACZC,MAAM,QACNkB,aAAc/E,EAAK6C,MACnBiB,SAbK,SAACP,GAClBF,EAASE,EAAEQ,OAAOrC,UAcV,4BACI,wBAAQT,KAAK,SAASwC,UAAU,SAAhC,6BCALpB,eAJS,SAAAzB,GAAK,MAAK,CAC9BZ,KAAMY,EAAMZ,QAKZ,CAAEgF,QL0CiB,SAACC,GAAD,8CAAY,WAAMzC,GAAN,eAAAC,EAAA,+EAETK,IAAMyB,IAAN,oBAAuBU,IAFd,OAErBjC,EAFqB,OAI3BR,EAAS,CACLvB,KAAMgC,EACNnC,QAASkC,EAAIE,OANU,gDAS3BnC,QAAQC,IAAR,MAT2B,yDAAZ,wDK5CRqB,EAzBF,SAAC,GAA8B,IAA5B2C,EAA2B,EAA3BA,QAAShF,EAAkB,EAAlBA,KAAMkF,EAAY,EAAZA,MAM3B,OALAnE,QAAQC,IAAIhB,EAAM,QAClBmD,IAAMqB,WAAU,WACZQ,EAAQE,EAAMC,OAAOrD,MACtB,CAACkD,EAASE,EAAMC,OAAOrD,KAErB9B,EAID,qBAAKyD,UAAU,OAAf,SACI,cAAC,EAAD,CAAgBzD,KAAMA,EAAM2E,QAASO,EAAMP,YAJxC,2DC8BAtC,cACX,GACA,CAAE+C,aNsEsB,SAACC,EAAQhE,GAAT,8CAAoB,WAAMmB,GAAN,mBAAAC,EAAA,6DACtCC,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAAO,CACTjB,UAAW0D,GAR6B,kBAYtBvC,IAAM8B,MAAN,2BAAgCvD,GAAUuB,EAAMF,GAZ1B,OAYlCM,EAZkC,OAcxCR,EAAS,CACLvB,KAAMgC,EACNnC,QAAS,CAAEO,SAAQtB,MAAOiD,EAAIE,QAhBM,gDAmBxCnC,QAAQC,IAAR,MAnBwC,yDAApB,uDMtERsE,WN6FM,SAAAxD,GAAE,8CAAI,WAAMU,GAAN,SAAAC,EAAA,+EAElBK,IAAMmB,OAAN,oBAA0BnC,IAFR,OAIxBU,EAAS,CACLvB,KAAMgC,EACNnC,QAASgB,IANW,+CASxBf,QAAQC,IAAR,MATwB,wDAAJ,wDM/FbqB,EAtCM,SAAC,GAAwC,IAAtC+C,EAAqC,EAArCA,aAAcE,EAAuB,EAAvBA,WAAYtF,EAAW,EAAXA,KAAW,EAC3BmD,IAAMC,SAASpD,EAAK2B,WADO,mBAClD4D,EADkD,KACzCC,EADyC,KAMzD,OACI,qBAAI/B,UAAU,iBAAd,UACI,wBAAOA,UAAU,WAAjB,UACI,uBACIK,SAAU,SAACP,GACPiC,EAAWjC,EAAEQ,OAAOwB,SACpBH,EAAa7B,EAAEQ,OAAOwB,QAASvF,EAAKoB,MAExCmE,QAASA,EACTtE,KAAK,aAGT,sBAAMwC,UAAU,gBAAhB,uBAEJ,cAAC,IAAD,CAAMS,GAAE,gBAAWlE,EAAKoB,KAAxB,SACI,qBAAKqC,UAAU,uBAAf,SAAuCzD,EAAK6C,UAEhD,wBACIsB,QAAS,kBArBMrC,EAqBkB9B,EAAKoB,SApB9CkE,EAAWxD,GADW,IAACA,GAsBf2B,UAAU,wBAFd,oBAhBgCzD,EAAKoB,QC8BlCiB,cAAQ,GAAI,CAAEoD,QPSN,SAAChE,EAAUiE,GAAX,8CAAwB,WAAMlD,GAAN,mBAAAC,EAAA,6DAC3C1B,QAAQC,IAAI,WAAYS,GAClBiB,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAAO,CACTC,MAAOpB,GATgC,kBAarBqB,IAAMC,KAAN,sBAA0B2C,EAA1B,SAA2C9C,EAAMF,GAb5B,OAajCM,EAbiC,OAevCR,EAAS,CACLvB,KAAMgC,EACNnC,QAASkC,EAAIE,OAjBsB,kDAoBvCnC,QAAQC,IAAR,MApBuC,0DAAxB,wDOTRqB,EApCQ,SAAC,GAA2B,IAAzBoD,EAAwB,EAAxBA,QAASrB,EAAe,EAAfA,SAC/BrD,QAAQC,IAAIoD,GADkC,MAEpBjB,IAAMC,SAAS,IAFK,mBAEvCP,EAFuC,KAEhCQ,EAFgC,KAa9C,OACI,mCACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACFiC,EAAQ5C,EAAOuB,GACff,EAAS,KAQL,SACI,uBACII,UAAU,iCACVC,aAAa,MACbC,KAAK,QACLC,YAAY,mCACZC,MAAM,QACNnC,MAAOmB,EACPiB,SAbK,SAACP,GAClBF,EAASE,EAAEQ,OAAOrC,iBCWXW,cACX,GACA,CAAEsD,aRyHsB,SAACrE,EAAQoE,GAAT,8CAAsB,WAAMlD,GAAN,mBAAAC,EAAA,6DAC9C1B,QAAQC,IAAI,SAAUM,GAChBoB,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAAO,CACTtB,OAAQA,GATkC,kBAaxBwB,IAAMC,KAAN,6BAAiC2C,EAAjC,UAAmD9C,EAAMF,GAbjC,OAapCM,EAboC,OAe1CR,EAAS,CACLvB,KAAMgC,EACNnC,QAASkC,EAAIE,OAjByB,kDAoB1CnC,QAAQC,IAAR,MApB0C,0DAAtB,wDQ3HbqB,EAzBI,SAAC,GAAgC,IAA9BsD,EAA6B,EAA7BA,aAAcvB,EAAe,EAAfA,SAChCrD,QAAQC,IAAIoD,GACZ,IAAMwB,EAAc,SAACrC,EAAGjC,GACpBqE,EAAarE,EAAQ8C,IAEzB,OACI,qBAAIX,UAAU,cAAd,UACI,6BACI,wBAAQA,UAAU,qBAAqBU,QAAS,SAACZ,GAAD,OAAOqC,EAAYrC,EAAG,QAAtE,mBAEJ,6BACI,wBAAQE,UAAU,qBAAqBU,QAAS,SAACZ,GAAD,OAAOqC,EAAYrC,EAAG,WAAtE,sBAEJ,6BACI,wBAAQE,UAAU,qBAAqBU,QAAS,SAACZ,GAAD,OAAOqC,EAAYrC,EAAG,cAAtE,+BCmBDlB,eAJS,SAAAzB,GAAK,MAAK,CAC9Bb,MAAOa,EAAMb,SAKb,CAAE8F,STAkB,SAACH,GAAD,8CAAc,WAAMlD,GAAN,eAAAC,EAAA,+EAEZK,IAAMyB,IAAN,sBAAyBmB,EAAzB,WAFY,OAExB1C,EAFwB,OAI9BR,EAAS,CACLvB,KAAMgC,EACNnC,QAASkC,EAAIE,OANa,gDAS9BnC,QAAQC,IAAR,MAT8B,yDAAd,wDSFTqB,EA3BD,SAAC,GAAgC,IAA9BwD,EAA6B,EAA7BA,SAAU9F,EAAmB,EAAnBA,MAAOmF,EAAY,EAAZA,MAM9B,OAJA/B,IAAMqB,WAAU,WACZqB,EAASX,EAAMC,OAAOrD,MACvB,CAAC+D,EAAUX,EAAMC,OAAOrD,KAGvB,sBAAK2B,UAAU,OAAf,UACI,cAAC,EAAD,CAAgBW,SAAUc,EAAMC,OAAOrD,KACvC,oBAAI2B,UAAU,YAAd,SACK1D,EAAMoB,KAAI,SAAAnB,GACP,OAAO,cAAC,EAAD,CAA6BA,KAAMA,GAAhBA,EAAKoB,UAGvC,cAAC,EAAD,CAAYgD,SAAUc,EAAMC,OAAOrD,WCLhCgE,MAff,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAM5B,GAAG,IAAT,SACE,qBAAKT,UAAU,OAAf,SACE,qBAAKsC,IAAI,YAAYC,IAAI,aAG7B,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWzB,EAAQ0B,OAAK,IACxC,cAAC,IAAD,CAAOF,KAAK,oBAAoBC,UAAWE,EAAOD,OAAK,IACvD,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWG,EAAMF,OAAK,QCH9CG,EAAa,CAACC,KAGdC,EAAQC,sBACZtE,EACAuE,8BAAoBC,kBAAe,WAAf,EAAmBL,KAGzCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.9eba0d46.chunk.js","sourcesContent":["const initialState = {\n    buckets: [],\n    bucketName: [],\n    editingItem: {},\n    todos: [],\n    todo: {},\n    loading: true\n};\n\nexport default initialState;","export const ADD_BUCKET = 'ADD_BUCKET';\nexport const ADD_TODO = 'ADD_TODO';\nexport const GET_TODO = 'GET_TODO';\nexport const GET_BUCKETS = 'GET_BUCKETS';\nexport const GET_TODOS = 'GET_TODOS';\nexport const UPDATE_TODO = 'UPDATE_TODO';\nexport const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const ALL_TODOS = 'ALL_TODO'\nexport const ACTIVE_TODOS = 'ACTIVE_TODO'\nexport const COMPLETED_TODOS = 'COMPLETED_TODO'\nexport const FILTERED_TODO = 'FILTERED_TODO'\nexport const DELETE_BUCKET = 'DELETE_BUCKET'\nexport const EDIT_TASK = 'EDIT_TASK';\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\nexport const CANCEL_TASK = 'CANCEL_TASK';\nexport const CANCEL_EDIT_TASK = 'CANCEL_EDIT_TASK';\nexport const SELECT_EDIT_TASK = 'SELECT_EDIT_TASK';","import * as actionTypes from '../actions/types';\n\nconst TodosReducer = (state, action) => {\n    const { payload } = action;\n    console.log(payload)\n    switch (action.type) {\n        case actionTypes.ADD_BUCKET: {\n            return { ...state, buckets: [...state.buckets, payload] }\n        }\n        case actionTypes.GET_BUCKETS: {\n            return { ...state, buckets: payload, loading: false }\n        }\n        case actionTypes.GET_TODOS: {\n            return { ...state, todos: payload, loading: false }\n        }\n        case actionTypes.ADD_TODO: {\n            return { ...state, todos: [...state.todos, payload] }\n        }\n        case actionTypes.GET_TODO: {\n            return { ...state, todo: payload, loading: false }\n        }\n        case actionTypes.UPDATE_TODO: {\n            return {\n                ...state,\n                todos: state.todos.map(todo =>\n                    todo._id === payload.todoId ? { ...todo, todos: payload.todos } : todo\n                ),\n                loading: false\n            }\n        }\n        case actionTypes.FILTERED_TODO: {\n            return {\n                ...state,\n                todos: payload,\n                loading: false\n            }\n        }\n        case actionTypes.DELETE_TODO: {\n            return {\n                ...state,\n                todos: state.todos.filter(todo => todo._id !== payload),\n                loading: false\n            };\n        }\n        case actionTypes.DELETE_BUCKET: {\n            return {\n                ...state,\n                buckets: state.buckets.filter(bucket => bucket._id !== payload),\n                todos: state.todos.filter(todo => todo.bucketId !== payload),\n                todo: {},\n                loading: false\n            }\n        }\n        case actionTypes.ADD_TASK: {\n            const todoItem = {\n                value: action.payload.value,\n                completed: false,\n                bucketName: action.payload.bucketName\n            };\n\n            return { ...state, items: [...state.items, todoItem] };\n        }\n        case actionTypes.CANCEL_EDIT_TASK: {\n            const newState = state.items.length ? { ...state, editingItem: {} } : { ...state };\n            return newState;\n        }\n\n        case actionTypes.DELETE_TASK: {\n            const items = state.items.filter(({ id }) => id !== action.payload.id);\n            return { ...state, items };\n        }\n\n        case actionTypes.EDIT_TASK: {\n            const items = state.items.map(item => {\n                if (item.id === action.payload.modifiedItem.id) {\n                    item.value = action.payload.modifiedItem.value;\n                }\n\n                return item;\n            });\n\n            return { ...state, items, editingItem: {} };\n        }\n\n        case actionTypes.COMPLETE_TASK: {\n            const items = state.items.map(item => {\n                if (item.id === action.payload.modifiedItem.id) {\n                    const newItem = { ...item };\n                    newItem.completed = !newItem.completed;\n                    return newItem;\n                }\n\n                return item;\n            });\n\n            return { ...state, items };\n        }\n\n        case actionTypes.SELECT_EDIT_TASK: {\n            const item = state.items.find(({ id }) => id === action.payload.id);\n            return { ...state, editingItem: item };\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default TodosReducer;","import reduceReducers from 'reduce-reducers';\n\nimport initialState from './initialState';\nimport TodosReducer from './Todos';\n\nconst AppReducer = reduceReducers(initialState, TodosReducer);\n\nexport default AppReducer;\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addBucket } from '../../actions/Todos';\n\n\nconst CreateBucketForm = ({ addBucket }) => {\n    const [title, setTitle] = React.useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addBucket(title)\n        setTitle(\"\")\n    }\n\n    const handleChange = (e) => {\n        setTitle(e.target.value)\n    }\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input\n                    className=\"text-input new-task-text-input\"\n                    autoComplete=\"off\"\n                    name='title'\n                    placeholder=\"Create your bucket?\"\n                    label='Title'\n                    value={title}\n                    onChange={handleChange}\n                />\n            </form>\n        </>\n    )\n}\n\nCreateBucketForm.propTypes = {\n    addBucket: PropTypes.func.isRequired\n};\n\n\nexport default connect('', { addBucket })(CreateBucketForm);","import * as actions from './types';\nimport axios from 'axios';\n\nexport const addBucket = bucketItem => async dispatch => {\n    console.log(\"bucketItem\", bucketItem)\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = {\n        title: bucketItem\n    }\n\n    try {\n        const res = await axios.post('/api/bucket', body, config);\n\n        dispatch({\n            type: actions.ADD_BUCKET,\n            payload: res.data\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const getBucket = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/buckets');\n\n        dispatch({\n            type: actions.GET_BUCKETS,\n            payload: res.data\n        });\n    } catch (err) {\n        console.log(err)\n    }\n};\n\nexport const getTodos = (bucketID) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/bucket/${bucketID}/todos`);\n\n        dispatch({\n            type: actions.GET_TODOS,\n            payload: res.data\n        });\n    } catch (err) {\n        console.log(err)\n    }\n};\n\nexport const addTodo = (todoItem, bucketID) => async dispatch => {\n    console.log(\"todoItem\", todoItem)\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = {\n        title: todoItem\n    }\n\n    try {\n        const res = await axios.post(`/api/bucket/${bucketID}/todo`, body, config);\n\n        dispatch({\n            type: actions.ADD_TODO,\n            payload: res.data\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const getTodo = (todoID) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/todo/${todoID}`);\n\n        dispatch({\n            type: actions.GET_TODO,\n            payload: res.data\n        });\n    } catch (err) {\n        console.log(err)\n    }\n};\n\nexport const updateTodo = (title, todoId, history) => async dispatch => {\n    console.log(\"title\", title)\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = {\n        title: title\n    }\n\n    try {\n        const res = await axios.patch(`/api/todo/${todoId}`, body, config);\n\n        dispatch({\n            type: actions.UPDATE_TODO,\n            payload: res.data\n        });\n\n        history.goBack();\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n\nexport const changeStatus = (status, todoId) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = {\n        completed: status\n    }\n\n    try {\n        const res = await axios.patch(`/api/todo/status/${todoId}`, body, config);\n\n        dispatch({\n            type: actions.UPDATE_TODO,\n            payload: { todoId, todos: res.data }\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const deleteTodo = id => async dispatch => {\n    try {\n        await axios.delete(`/api/todo/${id}`);\n\n        dispatch({\n            type: actions.DELETE_TODO,\n            payload: id\n        });\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const filteredTodo = (filter, bucketID) => async dispatch => {\n    console.log(\"filter\", filter)\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = {\n        filter: filter\n    }\n\n    try {\n        const res = await axios.post(`/api/bucket/filter/${bucketID}/todos`, body, config);\n\n        dispatch({\n            type: actions.FILTERED_TODO,\n            payload: res.data\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const deleteBucket = id => async dispatch => {\n    try {\n        await axios.delete(`/api/bucket/${id}`);\n\n        dispatch({\n            type: actions.DELETE_BUCKET,\n            payload: id\n        });\n    } catch (err) {\n        console.log(err)\n    }\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { deleteBucket } from '../../actions/Todos'\n\nconst BucketListItem = ({ deleteBucket, bucket }) => {\n\n    const handleDeleteClick = (e, bucketid) => {\n        console.log(bucketid);\n        alert(\"Are you sure you want to delete the bucket? Deleting the Bucket will also delete Todos\");\n        deleteBucket(bucketid)\n    }\n    return (\n        <li className=\"task-list-item\" key={bucket.id}>\n            <Link to={`/bucket/${bucket._id}/todos`}>\n                <div className=\"task-list-item-title\">{bucket.title}</div>\n            </Link>\n            <button\n                className=\"task-list-item-delete\"\n                onClick={(e) => handleDeleteClick(e, bucket._id)}\n            >\n                &times;\n      </button>\n        </li >\n    )\n}\n\nBucketListItem.propTypes = {\n    deleteBucket: PropTypes.func.isRequired,\n    bucket: PropTypes.object\n};\n\nexport default connect(\n    '',\n    { deleteBucket }\n)(BucketListItem);\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { getBucket } from '../../actions/Todos';\nimport BucketListItem from './BucketListItem';\n\nconst BucketList = ({ getBucket, buckets }) => {\n    React.useEffect(() => {\n        getBucket();\n    }, [getBucket]);\n    return (\n        <ul className=\"task-list\">\n            {buckets.map(bucket => {\n                return <BucketListItem key={bucket._id} bucket={bucket} />\n            })}\n        </ul>\n    )\n}\n\nBucketList.propTypes = {\n    getBucket: PropTypes.func.isRequired,\n    buckets: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n    buckets: state.buckets\n});\n\nexport default connect(\n    mapStateToProps,\n    { getBucket }\n)(BucketList);\n","import React from 'react'\nimport CreateBucketForm from '../Forms/CreateBucketForm'\nimport BucketList from './BucketList'\n\nconst Bucket = () => {\n    return (\n        <div className=\"page\">\n            <CreateBucketForm />\n            <BucketList />\n        </div>\n    )\n}\n\nexport default Bucket\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { updateTodo } from '../../actions/Todos';\n\n\nconst UpdateTodoForm = ({ updateTodo, todo, history }) => {\n    const [title, setTitle] = React.useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        updateTodo(title, todo._id, history)\n        setTitle(\"\")\n    }\n\n    const handleChange = (e) => {\n        setTitle(e.target.value)\n    }\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input\n                    className=\"text-input new-task-text-input\"\n                    autoComplete=\"off\"\n                    name='title'\n                    placeholder=\"What would you like to get done?\"\n                    label='Title'\n                    defaultValue={todo.title}\n                    onChange={handleChange}\n                />\n                <p>\n                    <button type=\"submit\" className=\"button\">Save</button>\n                </p>\n            </form>\n        </>\n    )\n}\n\nUpdateTodoForm.propTypes = {\n    updateTodo: PropTypes.func.isRequired,\n    todo: PropTypes.object\n};\n\n\nexport default connect('', { updateTodo })(withRouter(UpdateTodoForm));","import React from 'react'\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getTodo } from '../../actions/Todos'\nimport UpdateTodoForm from '../Forms/UpdateTodoForm';\n\nconst Todo = ({ getTodo, todo, match }) => {\n    console.log(todo, \"todo\")\n    React.useEffect(() => {\n        getTodo(match.params.id);\n    }, [getTodo, match.params.id]);\n\n    if (!todo) {\n        return <p>There are no todos here</p>\n    }\n    return (\n        <div className=\"page\">\n            <UpdateTodoForm todo={todo} history={match.history} />\n        </div>\n    )\n}\n\nTodo.propTypes = {\n    getTodo: PropTypes.func.isRequired,\n    todo: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    todo: state.todo\n});\n\nexport default connect(\n    mapStateToProps,\n    { getTodo }\n)(Todo);","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { changeStatus, deleteTodo } from '../../actions/Todos'\n\nconst TodoListItem = ({ changeStatus, deleteTodo, todo }) => {\n    const [checked, setChecked] = React.useState(todo.completed);\n\n    const handleDeleteClick = (id) => {\n        deleteTodo(id);\n    }\n    return (\n        <li className=\"task-list-item\" key={todo._id}>\n            <label className=\"checkbox\">\n                <input\n                    onChange={(e) => {\n                        setChecked(e.target.checked)\n                        changeStatus(e.target.checked, todo._id);\n                    }}\n                    checked={checked}\n                    type=\"checkbox\"\n                />\n\n                <span className=\"checkbox-mark\">&#10003;</span>\n            </label>\n            <Link to={`/todo/${todo._id}`}>\n                <div className=\"task-list-item-title\">{todo.title}</div>\n            </Link>\n            <button\n                onClick={() => handleDeleteClick(todo._id)}\n                className=\"task-list-item-delete\"\n            >\n                &times;\n      </button>\n        </li >\n    )\n}\n\nTodoListItem.propTypes = {\n    changeStatus: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired,\n    todo: PropTypes.object\n};\nexport default connect(\n    '',\n    { changeStatus, deleteTodo }\n)(TodoListItem);","import React from 'react'\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addTodo } from '../../actions/Todos';\n\n\nconst CreateTodoForm = ({ addTodo, bucketid }) => {\n    console.log(bucketid)\n    const [title, setTitle] = React.useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addTodo(title, bucketid)\n        setTitle(\"\")\n    }\n\n    const handleChange = (e) => {\n        setTitle(e.target.value)\n    }\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input\n                    className=\"text-input new-task-text-input\"\n                    autoComplete=\"off\"\n                    name='title'\n                    placeholder=\"What would you like to get done?\"\n                    label='Title'\n                    value={title}\n                    onChange={handleChange}\n                />\n            </form>\n        </>\n    )\n}\n\nCreateTodoForm.propTypes = {\n    addTodo: PropTypes.func.isRequired,\n    bucketid: PropTypes.string.isRequired\n};\n\n\nexport default connect('', { addTodo })(CreateTodoForm);","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { filteredTodo } from '../../actions/Todos'\n\nconst TodoFilter = ({ filteredTodo, bucketid }) => {\n    console.log(bucketid)\n    const handleClick = (e, filter) => {\n        filteredTodo(filter, bucketid)\n    }\n    return (\n        <ul className=\"task-filter\">\n            <li>\n                <button className='task-filter-active' onClick={(e) => handleClick(e, 'all')}>All</button>\n            </li>\n            <li>\n                <button className='task-filter-active' onClick={(e) => handleClick(e, 'active')}>Active</button>\n            </li>\n            <li>\n                <button className='task-filter-active' onClick={(e) => handleClick(e, 'completed')}>Completed</button>\n            </li>\n        </ul>\n    )\n}\n\nTodoFilter.propTypes = {\n    filteredTodo: PropTypes.func.isRequired,\n    bucketid: PropTypes.string.isRequired\n};\n\nexport default connect(\n    '',\n    { filteredTodo }\n)(TodoFilter);\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getTodos } from '../../actions/Todos';\nimport TodoListItem from '../todo/TodoListItem';\nimport CreateTodoForm from '../Forms/CreateTodoForm';\nimport TodoFilter from '../todo/TodoFilter';\n\n\nconst Todos = ({ getTodos, todos, match }) => {\n\n    React.useEffect(() => {\n        getTodos(match.params.id);\n    }, [getTodos, match.params.id]);\n\n    return (\n        <div className=\"page\">\n            <CreateTodoForm bucketid={match.params.id} />\n            <ul className=\"task-list\">\n                {todos.map(todo => {\n                    return <TodoListItem key={todo._id} todo={todo} />\n                })}\n            </ul>\n            <TodoFilter bucketid={match.params.id} />\n        </div>\n    )\n}\nTodos.propTypes = {\n    getTodos: PropTypes.func.isRequired,\n    todos: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n    todos: state.todos\n});\n\nexport default connect(\n    mapStateToProps,\n    { getTodos }\n)(Todos);\n","import { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport Bucket from './components/bucket/Bucket';\nimport Todo from './components/todo/Todo';\nimport Todos from './components/todos/Todos';\n\nfunction App() {\n  return (\n    <Router>\n      <Link to=\"/\">\n        <div className=\"logo\">\n          <img src=\"/logo.jpg\" alt=\"Logo\" />\n        </div>\n      </Link>\n      <Route path=\"/\" component={Bucket} exact />\n      <Route path=\"/bucket/:id/todos\" component={Todos} exact />\n      <Route path=\"/todo/:id\" component={Todo} exact />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport AppReducer from './reducers';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nimport './index.css';\nimport App from './App';\n\nconst middleware = [thunk];\n\n\nconst store = createStore(\n  AppReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}